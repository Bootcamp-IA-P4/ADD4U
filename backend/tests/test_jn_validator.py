import asyncio
from backend.agents.validator import JNValidatorAgent


async def test_validator_flow():
    json_a = {
        "structured_output": """{
            "seccion": "JN.1",
            "user_text": "Montaje de mercadillo con 15 puestos en la plaza del pueblo",
            "objeto": {"tipo": "mercadillo"},
            "alcance": {"lugar": "plaza del pueblo"},
            "ambito": {"puestos": 15}
        }""",
        "metadata": {"status": "success"}
    }

    json_b = {
        "narrative_output": "En el marco de la secciÃ³n JN.1 se propone la instalaciÃ³n de un mercadillo en la plaza del pueblo, compuesto por un total de 15 puestos. La actuaciÃ³n contempla el montaje de la infraestructura necesaria en dicho espacio pÃºblico.",
        "metadata": {"status": "success"}
    }

    validator_a = JNValidatorAgent(mode="estructurado")
    validator_b = JNValidatorAgent(mode="narrativa")

    state = {"json_a": json_a, "json_b": json_b}

    result_a = await validator_a.ainvoke(state)
    print("ðŸ”¹ Resultado Validator A:", result_a["validation_result"])

    result_b = await validator_b.ainvoke(result_a)
    print("ðŸ”¹ Resultado Validator B:", result_b["validation_result"])


if __name__ == "__main__":
    asyncio.run(test_validator_flow())