"""
TruLens Client (final compatible con 2.4.1)
-------------------------------------------
Crea y registra m√©tricas locales de evaluaci√≥n en SQLite.
Garantiza que las apps se crean autom√°ticamente.
"""

import os
from trulens.core import TruSession
from trulens.core.schema.feedback import FeedbackDefinition
from trulens.core.schema.record import Record
from trulens.core.app import App

# === Configuraci√≥n base ===
TRULENS_DB_PATH = os.getenv("TRULENS_DB_PATH", "backend/trulens_data/trulens.db")
session = TruSession(database_url=f"sqlite:///{TRULENS_DB_PATH}")

# === Definici√≥n del tipo de feedback ===
feedback_def = FeedbackDefinition(
    name="evaluacion_narrativa",
    description="Evaluaci√≥n local de coherencia, completitud y tono."
)

def register_eval(app_name: str, result: dict, metrics: dict):
    """
    Registra m√©tricas locales en la base TruLens y crea la app si no existe.
    """
    try:
        # üü¢ 1. Verificar si la app existe, si no, crearla
        app = session.get_app(app_name)
        if not app:
            print(f"üÜï Creando nueva app en TruLens: {app_name}")
            new_app = App(name=app_name, description="Mini-CELIA evaluation app")
            session.add_app(new_app)
            session.commit()

        # üü¢ 2. Crear el registro de feedback (record)
        record = Record(
            app_name=app_name,
            feedback_definition=feedback_def,
            feedback_result=metrics,
            metadata=result,
        )

        # üü¢ 3. Guardar el registro en la base
        session.add_record(record)
        session.commit()

        print(f"‚úÖ M√©tricas registradas correctamente en TruLens para {app_name}")

    except Exception as e:
        print(f"‚ö†Ô∏è Error al registrar m√©tricas TruLens: {e}")
